{"version":3,"sources":["store/restaurants/actions.js","store/restaurants/reducers.js","store/reducers.js","api.js","store/index.js","components/NewRestaurantForm.js","components/RestaurantList.js","components/RestaurantScreen.js","App.js","index.js"],"names":["STORE_RESTAURANTS","START_LOADING","RECORD_LOADING_ERROR","ADD_RESTAURANT","startLoading","type","storeRestaurants","records","recordLoadingError","addRestaurant","record","combineReducers","state","action","loading","loadError","restaurants","client","axios","create","baseURL","api","loadRestaurants","get","then","response","data","createRestaurant","name","post","store","createStore","rootReducer","compose","applyMiddleware","thunk","withExtraArgument","devToolsEnhancer","useStyles","makeStyles","theme","root","margin","spacing","mapDispatchToProps","dispatch","getState","connect","classes","useState","setName","validationError","setValidationError","serverError","setServerError","onSubmit","e","preventDefault","catch","Alert","severity","Box","display","className","TextField","placeholder","fullWidth","variant","value","onChange","target","Button","color","data-testid","useEffect","CircularProgress","List","map","restaurant","ListItem","ListItemText","id","RestaurantScreen","Card","CardContent","Typography","createMuiTheme","palette","primary","green","App","ThemeProvider","CssBaseline","AppBar","position","Toolbar","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61a78cbc.chunk.js","sourcesContent":["export const STORE_RESTAURANTS = 'STORE_RESTAURANTS';\nexport const START_LOADING = 'START_LOADING';\nexport const RECORD_LOADING_ERROR = 'RECORD_LOADING_ERROR';\nexport const ADD_RESTAURANT = 'ADD_RESTAURANT';\n\nexport const loadRestaurants = () => (dispatch, getState, api) => {\n  dispatch(startLoading());\n  api\n    .loadRestaurants()\n    .then(records => {\n      dispatch(storeRestaurants(records));\n    })\n    .catch(() => {\n      dispatch(recordLoadingError());\n    });\n};\n\nconst startLoading = () => ({type: START_LOADING});\n\nconst storeRestaurants = records => ({\n  type: STORE_RESTAURANTS,\n  records,\n});\n\nconst recordLoadingError = () => ({type: RECORD_LOADING_ERROR});\n\nexport const createRestaurant = name => (dispatch, getState, api) => {\n  return api.createRestaurant(name).then(record => {\n    dispatch(addRestaurant(record));\n  });\n};\n\nconst addRestaurant = record => ({\n  type: ADD_RESTAURANT,\n  record,\n});\n","import {combineReducers} from 'redux';\nimport {\n  START_LOADING,\n  STORE_RESTAURANTS,\n  RECORD_LOADING_ERROR,\n  ADD_RESTAURANT,\n} from './actions';\n\nconst records = (state = [], action) => {\n  switch (action.type) {\n    case STORE_RESTAURANTS:\n      return action.records;\n    case ADD_RESTAURANT:\n      return [...state, action.record]\n    default:\n      return state;\n  }\n};\n\nconst loading = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n    case STORE_RESTAURANTS:\n    case RECORD_LOADING_ERROR:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst loadError = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return false;\n    case RECORD_LOADING_ERROR:\n      return true;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  records,\n  loading,\n  loadError,\n});\n","import {combineReducers} from 'redux';\nimport restaurants from './restaurants/reducers';\n\nexport default combineReducers({restaurants});\n","import axios from 'axios';\n\nconst client = axios.create({\n  baseURL:\n    'https://outside-in-dev-api.herokuapp.com/L0zDUEygBcByT1fkNYho28skt5Cey7pv',\n});\n\nconst api = {\n  loadRestaurants() {\n    return client.get('/restaurants').then(response => response.data);\n  },\n  createRestaurant(name) {\n    return client.post('/restaurants', {name}).then(response => response.data);\n  },\n};\n\nexport default api;\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport {devToolsEnhancer} from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport api from '../api';\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk.withExtraArgument(api)), devToolsEnhancer()),\n);\n\nexport default store;\n","import {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport {createRestaurant} from '../store/restaurants/actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport const NewRestaurantForm = ({createRestaurant}) => {\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [validationError, setValidationError] = useState(false);\n  const [serverError, setServerError] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name) {\n      setValidationError(false);\n      setServerError(false);\n      createRestaurant(name)\n        .then(() => {\n          setName('');\n        })\n        .catch(() => {\n          setServerError(true);\n        });\n    } else {\n      setValidationError(true);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {serverError ? (\n        <Alert severity=\"error\">\n          The restaurant could not be saved. Please try again.\n        </Alert>\n      ) : null}\n      {validationError ? (\n        <Alert severity=\"error\">Name is required</Alert>\n      ) : null}\n      <Box display=\"flex\" className={classes.root}>\n        <TextField\n          placeholder=\"Add Restaurant\"\n          fullWidth\n          variant=\"filled\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          data-testid=\"new-restaurant-submit-button\"\n        >\n          Add\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  createRestaurant,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewRestaurantForm);\n","import {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Alert from '@material-ui/lab/Alert';\nimport {loadRestaurants} from '../store/restaurants/actions';\n\nexport const RestaurantList = ({\n  loadRestaurants,\n  restaurants,\n  loading,\n  loadError,\n}) => {\n  useEffect(() => {\n    loadRestaurants();\n  }, [loadRestaurants]);\n\n  return (\n    <>\n      {loading ? <CircularProgress data-testid=\"loading-indicator\" /> : null}\n      <List>\n        {restaurants.map(restaurant => (\n          <ListItem key={restaurant.id}>\n            <ListItemText>{restaurant.name}</ListItemText>\n          </ListItem>\n        ))}\n      </List>\n      {loadError ? (\n        <Alert severity=\"error\">Restaurants could not be loaded.</Alert>\n      ) : null}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    restaurants: state.restaurants.records,\n    loading: state.restaurants.loading,\n    loadError: state.restaurants.loadError,\n  };\n};\n\nconst mapDispatchToProps = {loadRestaurants};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantList);\n","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport NewRestaurantForm from './NewRestaurantForm';\nimport RestaurantList from './RestaurantList';\n\nconst RestaurantScreen = () => (\n  <div>\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Restaurants</Typography>\n        <NewRestaurantForm/>\n        <RestaurantList />\n      </CardContent>\n    </Card>\n  </div>\n);\n\nexport default RestaurantScreen;\n","import {Provider} from 'react-redux';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {ThemeProvider} from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport store from './store';\nimport RestaurantScreen from './components/RestaurantScreen';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">Opinion Ate</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <RestaurantScreen />\n      </Container>\n    </ThemeProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}