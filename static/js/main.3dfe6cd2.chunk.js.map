{"version":3,"sources":["store/restaurants/actions.js","store/restaurants/reducers.js","store/reducers.js","api.js","store/index.js","components/RestaurantList.js","components/RestaurantScreen.js","App.js","index.js"],"names":["STORE_RESTAURANTS","START_LOADING","RECORD_LOADING_ERROR","startLoading","type","storeRestaurants","records","recordLoadingError","combineReducers","state","action","loading","loadError","restaurants","client","axios","create","baseURL","api","loadRestaurants","get","then","response","data","store","createStore","rootReducer","compose","applyMiddleware","thunk","withExtraArgument","devToolsEnhancer","mapDispatchToProps","dispatch","getState","catch","connect","useEffect","CircularProgress","data-testid","List","map","restaurant","ListItem","ListItemText","name","id","Alert","severity","RestaurantScreen","Card","CardContent","Typography","variant","theme","createMuiTheme","palette","primary","green","App","ThemeProvider","CssBaseline","AppBar","position","Toolbar","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAaA,EAAoB,oBACpBC,EAAgB,gBAChBC,EAAuB,uBAc9BC,EAAe,iBAAO,CAACC,KAAMH,IAE7BI,EAAmB,SAAAC,GAAO,MAAK,CACnCF,KAAMJ,EACNM,YAGIC,EAAqB,iBAAO,CAACH,KAAMF,ICgB1BM,4BAAgB,CAC7BF,QAjCc,WAAyB,IAAxBG,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAQA,EAAON,MACb,KAAKJ,EACH,OAAOU,EAAOJ,QAChB,QACE,OAAOG,IA6BXE,QAzBc,WAA4B,IAA3BF,EAA0B,wDAAXC,EAAW,uCACzC,OAAQA,EAAON,MACb,KAAKH,EACH,OAAO,EACT,KAAKD,EACL,KAAKE,EACH,OAAO,EACT,QACE,OAAOO,IAkBXG,UAdgB,WAA4B,IAA3BH,EAA0B,wDAAXC,EAAW,uCAC3C,OAAQA,EAAON,MACb,KAAKH,EACH,OAAO,EACT,KAAKC,EACH,OAAO,EACT,QACE,OAAOO,MChCED,4BAAgB,CAACK,gB,QCD1BC,E,OAASC,EAAMC,OAAO,CAC1BC,QACE,8EASWC,EANH,CACVC,gBADU,WAER,OAAOL,EAAOM,IAAI,gBAAgBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCEjDC,EALDC,sBACZC,EACAC,kBAAQC,0BAAgBC,IAAMC,kBAAkBZ,IAAOa,+B,sECoCnDC,EAAqB,CAACb,gBLxCG,kBAAM,SAACc,EAAUC,EAAUhB,GACxDe,EAAS9B,KACTe,EACGC,kBACAE,MAAK,SAAAf,GACJ2B,EAAS5B,EAAiBC,OAE3B6B,OAAM,WACLF,EAAS1B,WKkCA6B,eAVS,SAAA3B,GACtB,MAAO,CACLI,YAAaJ,EAAMI,YAAYP,QAC/BK,QAASF,EAAMI,YAAYF,QAC3BC,UAAWH,EAAMI,YAAYD,aAMOoB,EAAzBI,EArCe,SAAC,GAKxB,IAJLjB,EAII,EAJJA,gBACAN,EAGI,EAHJA,YACAF,EAEI,EAFJA,QACAC,EACI,EADJA,UAMA,OAJAyB,qBAAU,WACRlB,MACC,CAACA,IAGF,qCACGR,EAAU,cAAC2B,EAAA,EAAD,CAAkBC,cAAY,sBAAyB,KAClE,cAACC,EAAA,EAAD,UACG3B,EAAY4B,KAAI,SAAAC,GAAU,OACzB,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAeF,EAAWG,QADbH,EAAWI,SAK7BlC,EACC,cAACmC,EAAA,EAAD,CAAOC,SAAS,QAAhB,8CACE,WCfKC,EAXU,kBACvB,8BACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBACA,cAAC,EAAD,YCEFC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAASC,OAoBEC,EAhBH,kBACV,cAAC,IAAD,CAAUnC,MAAOA,EAAjB,SACE,eAACoC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,UACE,cAACO,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACZ,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BAGJ,cAACY,EAAA,EAAD,UACE,cAAC,EAAD,YCxBRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3dfe6cd2.chunk.js","sourcesContent":["export const STORE_RESTAURANTS = 'STORE_RESTAURANTS';\nexport const START_LOADING = 'START_LOADING';\nexport const RECORD_LOADING_ERROR = 'RECORD_LOADING_ERROR';\n\nexport const loadRestaurants = () => (dispatch, getState, api) => {\n  dispatch(startLoading());\n  api\n    .loadRestaurants()\n    .then(records => {\n      dispatch(storeRestaurants(records));\n    })\n    .catch(() => {\n      dispatch(recordLoadingError());\n    });\n};\n\nconst startLoading = () => ({type: START_LOADING});\n\nconst storeRestaurants = records => ({\n  type: STORE_RESTAURANTS,\n  records,\n});\n\nconst recordLoadingError = () => ({type: RECORD_LOADING_ERROR});\n","import {combineReducers} from 'redux';\nimport {\n  START_LOADING,\n  STORE_RESTAURANTS,\n  RECORD_LOADING_ERROR,\n} from './actions';\n\nconst records = (state = [], action) => {\n  switch (action.type) {\n    case STORE_RESTAURANTS:\n      return action.records;\n    default:\n      return state;\n  }\n};\n\nconst loading = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n    case STORE_RESTAURANTS:\n    case RECORD_LOADING_ERROR:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst loadError = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return false;\n    case RECORD_LOADING_ERROR:\n      return true;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  records,\n  loading,\n  loadError,\n});\n","import {combineReducers} from 'redux';\nimport restaurants from './restaurants/reducers';\n\nexport default combineReducers({restaurants});\n","import axios from 'axios';\n\nconst client = axios.create({\n  baseURL:\n    'https://outside-in-dev-api.herokuapp.com/L0zDUEygBcByT1fkNYho28skt5Cey7pv',\n});\n\nconst api = {\n  loadRestaurants() {\n    return client.get('/restaurants').then(response => response.data);\n  },\n};\n\nexport default api;\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport {devToolsEnhancer} from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport api from '../api';\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk.withExtraArgument(api)), devToolsEnhancer()),\n);\n\nexport default store;\n","import {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Alert from '@material-ui/lab/Alert';\nimport {loadRestaurants} from '../store/restaurants/actions';\n\nexport const RestaurantList = ({\n  loadRestaurants,\n  restaurants,\n  loading,\n  loadError,\n}) => {\n  useEffect(() => {\n    loadRestaurants();\n  }, [loadRestaurants]);\n\n  return (\n    <>\n      {loading ? <CircularProgress data-testid=\"loading-indicator\" /> : null}\n      <List>\n        {restaurants.map(restaurant => (\n          <ListItem key={restaurant.id}>\n            <ListItemText>{restaurant.name}</ListItemText>\n          </ListItem>\n        ))}\n      </List>\n      {loadError ? (\n        <Alert severity=\"error\">Restaurants could not be loaded.</Alert>\n      ) : null}\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    restaurants: state.restaurants.records,\n    loading: state.restaurants.loading,\n    loadError: state.restaurants.loadError,\n  };\n};\n\nconst mapDispatchToProps = {loadRestaurants};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantList);\n","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport RestaurantList from './RestaurantList';\n\nconst RestaurantScreen = () => (\n  <div>\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Restaurants</Typography>\n        <RestaurantList />\n      </CardContent>\n    </Card>\n  </div>\n);\n\nexport default RestaurantScreen;\n","import {Provider} from 'react-redux';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {ThemeProvider} from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport store from './store';\nimport RestaurantScreen from './components/RestaurantScreen';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">Opinion Ate</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <RestaurantScreen />\n      </Container>\n    </ThemeProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}