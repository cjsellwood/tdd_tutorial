{"version":3,"sources":["store/restaurants/actions.js","store/restaurants/reducers.js","store/reducers.js","api.js","store/index.js","components/RestaurantList.js","components/RestaurantScreen.js","App.js","index.js"],"names":["STORE_RESTAURANTS","storeRestaurants","records","type","combineReducers","state","action","restaurants","client","axios","create","baseURL","api","loadRestaurants","get","then","response","data","store","createStore","rootReducer","compose","applyMiddleware","thunk","withExtraArgument","devToolsEnhancer","mapDispatchToProps","dispatch","getState","connect","useEffect","List","map","restaurant","ListItem","ListItemText","name","id","RestaurantScreen","Card","CardContent","Typography","variant","theme","createMuiTheme","palette","primary","green","App","ThemeProvider","CssBaseline","AppBar","position","Toolbar","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAaA,EAAoB,oBAQ3BC,EAAmB,SAAAC,GAAO,MAAK,CACnCC,KAAMH,EACNE,YCEaE,4BAAgB,CAC7BF,QAVc,WAAyB,IAAxBG,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAQA,EAAOH,MACb,KAAKH,EACH,OAAOM,EAAOJ,QAChB,QACE,OAAOG,MCLED,4BAAgB,CAACG,gB,QCD1BC,E,OAASC,EAAMC,OAAO,CAC1BC,QACE,8EASWC,EANH,CACVC,gBADU,WAER,OAAOL,EAAOM,IAAI,gBAAgBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCEjDC,EALDC,sBACZC,EACAC,kBAAQC,0BAAgBC,IAAMC,kBAAkBZ,IAAOa,+B,mDCqBnDC,EAAqB,CAACb,gBL3BG,kBAAM,SAACc,EAAUC,EAAUhB,GACxDA,EAAIC,kBAAkBE,MAAK,SAAAb,GACzByB,EAAS1B,EAAiBC,UK2Bf2B,eARS,SAAAxB,GACtB,MAAO,CACLE,YAAaF,EAAME,YAAYL,WAMKwB,EAAzBG,EAxBe,SAAC,GAAoC,IAAnChB,EAAkC,EAAlCA,gBAAiBN,EAAiB,EAAjBA,YAK/C,OAJAuB,qBAAU,WACRjB,MACC,CAACA,IAGF,cAACkB,EAAA,EAAD,UACGxB,EAAYyB,KAAI,SAAAC,GAAU,OACzB,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAeF,EAAWG,QADbH,EAAWI,YCCnBC,EAXU,kBACvB,8BACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBACJ,cAAC,EAAD,YCEEC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAASC,OAoBEC,EAhBH,kBACV,cAAC,IAAD,CAAU9B,MAAOA,EAAjB,SACE,eAAC+B,EAAA,EAAD,CAAeN,MAAOA,EAAtB,UACE,cAACO,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACZ,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BAGJ,cAACY,EAAA,EAAD,UACE,cAAC,EAAD,YCxBRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.14dc3eca.chunk.js","sourcesContent":["export const STORE_RESTAURANTS = 'STORE_RESTAURANTS';\n\nexport const loadRestaurants = () => (dispatch, getState, api) => {\n  api.loadRestaurants().then(records => {\n    dispatch(storeRestaurants(records));\n  });\n};\n\nconst storeRestaurants = records => ({\n  type: STORE_RESTAURANTS,\n  records,\n});\n","import {combineReducers} from 'redux';\nimport {STORE_RESTAURANTS} from './actions';\n\nconst records = (state = [], action) => {\n  switch (action.type) {\n    case STORE_RESTAURANTS:\n      return action.records;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  records,\n});\n","import {combineReducers} from 'redux';\nimport restaurants from './restaurants/reducers';\n\nexport default combineReducers({restaurants});\n","import axios from 'axios';\n\nconst client = axios.create({\n  baseURL:\n    'https://outside-in-dev-api.herokuapp.com/L0zDUEygBcByT1fkNYho28skt5Cey7pv',\n});\n\nconst api = {\n  loadRestaurants() {\n    return client.get('/restaurants').then(response => response.data);\n  },\n};\n\nexport default api;\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport {devToolsEnhancer} from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport api from '../api';\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk.withExtraArgument(api)), devToolsEnhancer()),\n);\n\nexport default store;\n","import {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {loadRestaurants} from '../store/restaurants/actions';\n\nexport const RestaurantList = ({loadRestaurants, restaurants}) => {\n  useEffect(() => {\n    loadRestaurants();\n  }, [loadRestaurants]);\n\n  return (\n    <List>\n      {restaurants.map(restaurant => (\n        <ListItem key={restaurant.id}>\n          <ListItemText>{restaurant.name}</ListItemText>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    restaurants: state.restaurants.records,\n  };\n};\n\nconst mapDispatchToProps = {loadRestaurants};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantList);\n","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport RestaurantList from './RestaurantList';\n\nconst RestaurantScreen = () => (\n  <div>\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Restaurants</Typography>\n    <RestaurantList />\n      </CardContent>\n    </Card>\n  </div>\n);\n\nexport default RestaurantScreen;\n","import {Provider} from 'react-redux';\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {ThemeProvider} from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport store from './store';\nimport RestaurantScreen from './components/RestaurantScreen';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">Opinion Ate</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <RestaurantScreen />\n      </Container>\n    </ThemeProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}